(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[0],{

/***/ "../pkg/chip8_emulator.js":
/*!********************************!*\
  !*** ../pkg/chip8_emulator.js ***!
  \********************************/
/*! exports provided: CHIP8, __wbg_log_e2f98e71d3c23a52, __wbindgen_throw */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _chip8_emulator_bg_wasm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chip8_emulator_bg.wasm */ \"../pkg/chip8_emulator_bg.wasm\");\n/* harmony import */ var _chip8_emulator_bg_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chip8_emulator_bg.js */ \"../pkg/chip8_emulator_bg.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CHIP8\", function() { return _chip8_emulator_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"CHIP8\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbg_log_e2f98e71d3c23a52\", function() { return _chip8_emulator_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbg_log_e2f98e71d3c23a52\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_throw\", function() { return _chip8_emulator_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbindgen_throw\"]; });\n\n\n\n\n//# sourceURL=webpack:///../pkg/chip8_emulator.js?");

/***/ }),

/***/ "../pkg/chip8_emulator_bg.js":
/*!***********************************!*\
  !*** ../pkg/chip8_emulator_bg.js ***!
  \***********************************/
/*! exports provided: CHIP8, __wbg_log_e2f98e71d3c23a52, __wbindgen_throw */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CHIP8\", function() { return CHIP8; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_log_e2f98e71d3c23a52\", function() { return __wbg_log_e2f98e71d3c23a52; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_throw\", function() { return __wbindgen_throw; });\n/* harmony import */ var _chip8_emulator_bg_wasm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chip8_emulator_bg.wasm */ \"../pkg/chip8_emulator_bg.wasm\");\n\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== _chip8_emulator_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer) {\n        cachegetUint8Memory0 = new Uint8Array(_chip8_emulator_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n/**\n*/\nclass CHIP8 {\n\n    static __wrap(ptr) {\n        const obj = Object.create(CHIP8.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        _chip8_emulator_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_chip8_free\"](ptr);\n    }\n    /**\n    * @returns {CHIP8}\n    */\n    static new() {\n        var ret = _chip8_emulator_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"chip8_new\"]();\n        return CHIP8.__wrap(ret);\n    }\n    /**\n    */\n    load_fonts() {\n        _chip8_emulator_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"chip8_load_fonts\"](this.ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    get_width() {\n        var ret = _chip8_emulator_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"chip8_get_width\"](this.ptr);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    get_height() {\n        var ret = _chip8_emulator_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"chip8_get_height\"](this.ptr);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    get_dirty_paint() {\n        var ret = _chip8_emulator_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"chip8_get_dirty_paint\"](this.ptr);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    get_dirty_size() {\n        var ret = _chip8_emulator_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"chip8_get_dirty_size\"](this.ptr);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    get_block_signal() {\n        var ret = _chip8_emulator_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"chip8_get_block_signal\"](this.ptr);\n        return ret;\n    }\n    /**\n    */\n    toggle_block_signal() {\n        _chip8_emulator_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"chip8_toggle_block_signal\"](this.ptr);\n    }\n    /**\n    */\n    post_cycle() {\n        _chip8_emulator_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"chip8_post_cycle\"](this.ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    get_key_buffer_pointer() {\n        var ret = _chip8_emulator_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"chip8_get_key_buffer_pointer\"](this.ptr);\n        return ret;\n    }\n    /**\n    * @returns {boolean}\n    */\n    should_draw() {\n        var ret = _chip8_emulator_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"chip8_should_draw\"](this.ptr);\n        return ret !== 0;\n    }\n    /**\n    */\n    draw_completed() {\n        _chip8_emulator_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"chip8_draw_completed\"](this.ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    get_pc() {\n        var ret = _chip8_emulator_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"chip8_get_pc\"](this.ptr);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    start_address() {\n        var ret = _chip8_emulator_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"chip8_start_address\"](this.ptr);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    get_memory_pointer() {\n        var ret = _chip8_emulator_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"chip8_get_memory_pointer\"](this.ptr);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    get_graphics_pointer() {\n        var ret = _chip8_emulator_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"chip8_get_graphics_pointer\"](this.ptr);\n        return ret;\n    }\n    /**\n    */\n    fetch_instruction() {\n        _chip8_emulator_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"chip8_fetch_instruction\"](this.ptr);\n    }\n    /**\n    */\n    move_pc() {\n        _chip8_emulator_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"chip8_move_pc\"](this.ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    get_opcode() {\n        var ret = _chip8_emulator_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"chip8_get_opcode\"](this.ptr);\n        return ret;\n    }\n    /**\n    */\n    decode_instruction() {\n        _chip8_emulator_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"chip8_decode_instruction\"](this.ptr);\n    }\n}\n\nfunction __wbg_log_e2f98e71d3c23a52(arg0, arg1) {\n    console.log(getStringFromWasm0(arg0, arg1));\n};\n\nfunction __wbindgen_throw(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../server/node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))\n\n//# sourceURL=webpack:///../pkg/chip8_emulator_bg.js?");

/***/ }),

/***/ "../pkg/chip8_emulator_bg.wasm":
/*!*************************************!*\
  !*** ../pkg/chip8_emulator_bg.wasm ***!
  \*************************************/
/*! exports provided: memory, __wbg_chip8_free, chip8_new, chip8_load_fonts, chip8_get_width, chip8_get_height, chip8_get_dirty_paint, chip8_get_dirty_size, chip8_get_block_signal, chip8_toggle_block_signal, chip8_post_cycle, chip8_get_key_buffer_pointer, chip8_should_draw, chip8_draw_completed, chip8_get_pc, chip8_start_address, chip8_get_memory_pointer, chip8_get_graphics_pointer, chip8_fetch_instruction, chip8_move_pc, chip8_get_opcode, chip8_decode_instruction */
/***/ (function(module, exports, __webpack_require__) {

eval("\"use strict\";\n// Instantiate WebAssembly module\nvar wasmExports = __webpack_require__.w[module.i];\n__webpack_require__.r(exports);\n// export exports from WebAssembly module\nfor(var name in wasmExports) if(name != \"__webpack_init__\") exports[name] = wasmExports[name];\n// exec imports from WebAssembly module (for esm order)\n/* harmony import */ var m0 = __webpack_require__(/*! ./chip8_emulator_bg.js */ \"../pkg/chip8_emulator_bg.js\");\n\n\n// exec wasm module\nwasmExports[\"__webpack_init__\"]()\n\n//# sourceURL=webpack:///../pkg/chip8_emulator_bg.wasm?");

/***/ }),

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var chip8_emulator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! chip8_emulator */ \"../pkg/chip8_emulator.js\");\n/* harmony import */ var chip8_emulator_chip8_emulator_bg__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! chip8_emulator/chip8_emulator_bg */ \"../pkg/chip8_emulator_bg.wasm\");\n\n\nvar json = __webpack_require__(/*! ./roms/metadata.json */ \"./roms/metadata.json\")\n\nconst chip = chip8_emulator__WEBPACK_IMPORTED_MODULE_0__[\"CHIP8\"].new();\nconst START_ADDRESS = chip.start_address();\nconst CELL_SIZE =20;\n\nconst height = chip.get_height();\nconst width = chip.get_width();\n\nconst gfx = new Array(height * width).fill(0);\n\nlet inverseKeyMapping = {\n\t48:0x0,\n\t49:0x1,\n\t50:0x2,\n\t51:0x3,\n\t52:0x4,\n\t53:0x5,\n\t54:0x6,\n\t55:0x7,\n\t56:0x8,\n\t57:0x9,\n\t65:0xA,\n\t66:0xB,\n\t67:0xC,\n\t68:0xD,\n\t69:0xE,\n\t70:0xF,\n};\n\nconst prepareCanvas = () => {\n\tconst canvas = document.getElementById(\"chip8-canvas\");\n\tcanvas.height = (CELL_SIZE + 1) * height + 1;\n\tcanvas.width = (CELL_SIZE + 1) * width + 1;\n\t\n\treturn canvas.getContext('2d');\n}\nconst fillCanvas = () => {\n\tctx.beginPath();\n\n\tfor (let row = 0; row < height; row++) {\n\t\tfor (let col = 0; col < width; col++)\n\t\t{\n\t\t\tconst idx = getIndex(row, col);\n\t\t\t\n\t\t\tctx.fillStyle = \"#000000\";\n\t\t\t\n\t\t\tctx.fillRect(\n\t\t\tcol * (CELL_SIZE) +1,\n\t\t\trow * (CELL_SIZE)+1,\n\t\t\tCELL_SIZE,\n\t\t\tCELL_SIZE\n\t\t\t);\n\t\t}\n\t}\n\n\tctx.stroke();\n}\n\nconst _loadCallback = () => {\n\tfillCanvas();\n\trequestAnimationFrame(renderLoop);\n}\nconst loadRom = async (rom) => {\n\tawait fetch('roms/'+rom)\n\t.then(i => i.arrayBuffer())\n\t\t.then(buffer => {\n\t\t\tconst rom = new DataView(buffer, 0, buffer.byteLength);\n\t\t\tlet programMemoryPointer = chip.get_memory_pointer();\n\t\t\tlet programMemory = new Uint8Array(chip8_emulator_chip8_emulator_bg__WEBPACK_IMPORTED_MODULE_1__[\"memory\"].buffer, programMemoryPointer, 4096);\n\t\t\tfor (let i = 0; i < rom.byteLength; i++) {\n\t\t\t\tprogramMemory[START_ADDRESS + i] = rom.getUint8(i);\n\t\t\t}\n\n\t\t\t_loadCallback();\n\t\t});\n}\n\nconst getIndex = (row, column) => {\n\treturn row * width + column;\n};\n\n\n\nconst drawCells = () => {\n\n\tconst cellsPtr = chip.get_dirty_paint();\n\tconst cells = new Uint16Array(chip8_emulator_chip8_emulator_bg__WEBPACK_IMPORTED_MODULE_1__[\"memory\"].buffer, cellsPtr, chip.get_dirty_size());\n\n\tctx.beginPath();\n\n\tfor (var ind of cells) {\n\t\tlet row = Math.floor(ind / width);\n\t\tlet col = ind % width;\n\n\t\tgfx[ind] = 1 - gfx[ind];\n\t\tctx.fillStyle = (gfx[ind] != 0) ? \"#FFFFFF\" : \"#000000\";\n\t\t\n\t\tctx.fillRect(\n\t\tcol * (CELL_SIZE) +1,\n\t\trow * (CELL_SIZE)+1,\n\t\tCELL_SIZE,\n\t\tCELL_SIZE\n\t\t);\n\t}\n\n\tctx.stroke();\n};\n\nconst keyboardDownEvent = (event) => {\n\tvar code = event.keyCode;\n\tif (inverseKeyMapping[code]) {\n\t\tconst keyBufferPtr = chip.get_key_buffer_pointer();\n\t\tconst keyBuffer = new Uint8Array(chip8_emulator_chip8_emulator_bg__WEBPACK_IMPORTED_MODULE_1__[\"memory\"].buffer, keyBufferPtr, 16);\n\t\tkeyBuffer[inverseKeyMapping[code]] = 1;\n\t\tif (chip.get_block_signal())\n\t\t\tchip.toggle_block_signal();\n\t}\n}\n\nconst keyboardUpEvent = (event) => {\n\tvar code = event.keyCode;\n\tif (inverseKeyMapping[code]) {\n\t\tconst keyBufferPtr = chip.get_key_buffer_pointer();\n\t\tconst keyBuffer = new Uint8Array(chip8_emulator_chip8_emulator_bg__WEBPACK_IMPORTED_MODULE_1__[\"memory\"].buffer, keyBufferPtr, 16);\n\t\tkeyBuffer[inverseKeyMapping[code]] = 0;\n\t}\n}\nconst initialize = (rom) => {\n\tchip.load_fonts();\n\twindow.addEventListener(\"keydown\", keyboardDownEvent);\n\twindow.addEventListener(\"keyup\", keyboardUpEvent);\n\tloadRom(rom);\n\tconsole.log(json)\n}\n\n\nconst renderLoop = () => {\n\tfor (var i = 0; i < 15; ++i) {\n\t\tchip.fetch_instruction();\n\t\tchip.decode_instruction();\n\t}\n\twhile (chip.get_block_signal()==1) { }\n\tchip.post_cycle();\n\tif (chip.should_draw()) {\n\t\tdrawCells();\n\t\tchip.draw_completed();\n\t}\n\trequestAnimationFrame(renderLoop);\n};\nvar ctx = null\nfunction main(rom){\n\tctx = prepareCanvas();\n\tinitialize(rom);\n}\nasync function populate() {\n\tlet dom = document.getElementById('roms');\n\tif (dom == null) return;\n\tfor (let name in json) {\n\t\tif (json[name]['txt']) {\n\t\t\tawait fetch(\"roms/\" + json[name]['txt'])\n\t\t\t\t.then(res => res.text())\n\t\t\t\t.then(text => {\n\t\t\t\t\tconsole.log(text,name)\n\t\t\t\t\tdom.insertAdjacentHTML('beforeend',\n\t\t\t\t\t`\n\t\t\t\t\t<div class=\"card\" style=\"margin: 50px\">\n\t\t\t\t\t<div class=\"card-header\">\n\t\t\t\t\t\t${name}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"card-body\">\n\t\t\t\t\t\t<h5 class=\"card-title\">${name}</h5>\n\t\t\t\t\t\t<p class=\"card-text\">${text}</p>\n\t\t\t\t\t\t<a href=\"/chip8-emulator/play.html?rom=${json[name].rom}&name=${name}&details=${json[name].txt}\" class=\"btn btn-primary\">Play!</a>\n\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t`)\n\t\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tdom.insertAdjacentHTML('beforeend',\n\t\t\t\t\t`\n\t\t\t\t\t<div class=\"card\" style=\"margin: 50px\">\n\t\t\t\t\t<div class=\"card-header\">\n\t\t\t\t\t\t${name}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"card-body\">\n\t\t\t\t\t\t<h5 class=\"card-title\">${name}</h5>\n\t\t\t\t\t\t<p class=\"card-text\">No info! Give it a shot anyways</p>\n\t\t\t\t\t\t<a href=\"/chip8-emulator/play.html?rom=${json[name].rom}&name=${name}\" class=\"btn btn-primary\">Play!</a>\n\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t`)\n\t\t}\n\t\t// await fetch('roms/')\n\t\t\n\t}\n}\nasync function entry() {\n\tlet roms = document.getElementById('roms');\n\tif (roms) {\n\t\tmain(\"test_opcode.ch8\")\n\t\tpopulate();\n\t}\n\telse {\n\t\tconst params = new URLSearchParams(document.location.search);\n\t\tconst rom = params.get(\"rom\");\n\t\tconst name = params.get(\"name\");\n\t\tconst details = params.get(\"details\");\n        console.log(rom);\n\t\tmain(rom);\n\t\tlet deets = document.getElementById('details');\n\t\tif (details) {\n\t\t\tawait fetch(\"roms/\" + details).then(res => res.text()).then(text => {\n\t\t\t\tdeets.insertAdjacentHTML('beforeend',\n\t\t\t\t`\n\t\t\t\t<div>\n\t\t\t\t\t<h2>${name}</h2>\n\t\t\t\t\t<hr>\n\t\t\t\t\t<p>${text}</p>\n\t\t\t\t</div>\n\t\t\t\t`\n\t\t\t\t)\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tdeets.insertAdjacentHTML('beforeend',\n\t\t\t\t`\n\t\t\t\t<div>\n\t\t\t\t\t<h2>${name}</h2>\n\t\t\t\t\t<hr>\n\t\t\t\t\t<p>Info not found!</p>\n\t\t\t\t</div>\n\t\t\t\t`\n\t\t\t\t)\n\t\t}\n\t\t\t\n\t\t\n\t}\n\t\n}\n//document.querySelector('button').addEventListener('click', main('Tank.ch8'));\n\nentry();\n\n//# sourceURL=webpack:///./index.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/harmony-module.js":
/*!*******************************************!*\
  !*** (webpack)/buildin/harmony-module.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n\n//# sourceURL=webpack:///(webpack)/buildin/harmony-module.js?");

/***/ }),

/***/ "./roms/metadata.json":
/*!****************************!*\
  !*** ./roms/metadata.json ***!
  \****************************/
/*! exports provided: Timebomb, Paddles, Breakout (Brix hack), Sum Fun, Pong, Syzygy, Soccer, Puzzle, Blinky, Lunar Lander (Udo Pernisz, 1979), Squash, Lunar Lander, 15 Puzzle, Addition Problems, Rush Hour, Astro Dodge, Reversi, Blitz, Space Flight, Bowling, Connect 4, Kaleidoscope, Guess, Hi-Lo, Brix, Tron, Russian Roulette, Missile, Pong 2 (Pong hack), Vertical Brix, Pong (1 player), Rocket Launcher, Biorhythm, Programmable Spacefighters, Brick (Brix hack, 1990), Shooting Stars, Coin Flipping, Hidden, Wipe Off, Most Dangerous Game, Space Invaders, Vers, Tapeworm, Craps, Nim, Animal Race, Tank, Slide, Worm V4, Wall, Rocket Launch, Figures, Tic-Tac-Toe, Submarine, Filter, Mastermind FourRow (Robert Lindley, 1978), Spooky Spot, Tetris, Deflection, Rocket, Space Intercept, UFO, Sequence Shoot, Merlin, ZeroPong, Pong (alt), X-Mirror, Landing, Airplane, Cave, default */
/***/ (function(module) {

eval("module.exports = JSON.parse(\"{\\\"Timebomb\\\":{\\\"rom\\\":\\\"Timebomb.ch8\\\"},\\\"Paddles\\\":{\\\"rom\\\":\\\"Paddles.ch8\\\"},\\\"Breakout (Brix hack)\\\":{\\\"txt\\\":\\\"Breakout (Brix hack) [David Winter, 1997].txt\\\",\\\"rom\\\":\\\"Breakout (Brix hack) [David Winter, 1997].ch8\\\"},\\\"Sum Fun\\\":{\\\"rom\\\":\\\"Sum Fun [Joyce Weisbecker].ch8\\\",\\\"txt\\\":\\\"Sum Fun [Joyce Weisbecker].txt\\\"},\\\"Pong\\\":{\\\"rom\\\":\\\"Pong [Paul Vervalin, 1990].ch8\\\",\\\"txt\\\":\\\"Pong [Paul Vervalin, 1990].txt\\\"},\\\"Syzygy\\\":{\\\"rom\\\":\\\"Syzygy [Roy Trevino, 1990].ch8\\\",\\\"txt\\\":\\\"Syzygy [Roy Trevino, 1990].txt\\\"},\\\"Soccer\\\":{\\\"rom\\\":\\\"Soccer.ch8\\\"},\\\"Puzzle\\\":{\\\"rom\\\":\\\"Puzzle.ch8\\\"},\\\"Blinky\\\":{\\\"rom\\\":\\\"Blinky [Hans Christian Egeberg] (alt).ch8\\\"},\\\"Lunar Lander (Udo Pernisz, 1979)\\\":{\\\"rom\\\":\\\"Lunar Lander (Udo Pernisz, 1979).ch8\\\"},\\\"Squash\\\":{\\\"rom\\\":\\\"Squash [David Winter].ch8\\\"},\\\"Lunar Lander\\\":{\\\"txt\\\":\\\"Lunar Lander [Udo Pernisz, 1979].txt\\\"},\\\"15 Puzzle\\\":{\\\"rom\\\":\\\"15 Puzzle [Roger Ivie].ch8\\\",\\\"txt\\\":\\\"15 Puzzle [Roger Ivie].txt\\\"},\\\"Addition Problems\\\":{\\\"rom\\\":\\\"Addition Problems [Paul C. Moews].ch8\\\"},\\\"Rush Hour\\\":{\\\"rom\\\":\\\"Rush Hour [Hap, 2006].ch8\\\",\\\"txt\\\":\\\"Rush Hour [Hap, 2006].txt\\\"},\\\"Astro Dodge\\\":{\\\"txt\\\":\\\"Astro Dodge [Revival Studios, 2008].txt\\\",\\\"rom\\\":\\\"Astro Dodge [Revival Studios, 2008].ch8\\\"},\\\"Reversi\\\":{\\\"txt\\\":\\\"Reversi [Philip Baltzer].txt\\\",\\\"rom\\\":\\\"Reversi [Philip Baltzer].ch8\\\"},\\\"Blitz\\\":{\\\"rom\\\":\\\"Blitz [David Winter].ch8\\\",\\\"txt\\\":\\\"Blitz [David Winter].txt\\\"},\\\"Space Flight\\\":{\\\"rom\\\":\\\"Space Flight.ch8\\\"},\\\"Bowling\\\":{\\\"txt\\\":\\\"Bowling [Gooitzen van der Wal].txt\\\",\\\"rom\\\":\\\"Bowling [Gooitzen van der Wal].ch8\\\"},\\\"Connect 4\\\":{\\\"rom\\\":\\\"Connect 4 [David Winter].ch8\\\",\\\"txt\\\":\\\"Connect 4 [David Winter].txt\\\"},\\\"Kaleidoscope\\\":{\\\"txt\\\":\\\"Kaleidoscope [Joseph Weisbecker, 1978].txt\\\",\\\"rom\\\":\\\"Kaleidoscope [Joseph Weisbecker, 1978].ch8\\\"},\\\"Guess\\\":{\\\"txt\\\":\\\"Guess [David Winter] (alt).txt\\\",\\\"rom\\\":\\\"Guess [David Winter] (alt).ch8\\\"},\\\"Hi-Lo\\\":{\\\"txt\\\":\\\"Hi-Lo [Jef Winsor, 1978].txt\\\",\\\"rom\\\":\\\"Hi-Lo [Jef Winsor, 1978].ch8\\\"},\\\"Brix\\\":{\\\"rom\\\":\\\"Brix [Andreas Gustafsson, 1990].ch8\\\"},\\\"Tron\\\":{\\\"rom\\\":\\\"Tron.ch8\\\"},\\\"Russian Roulette\\\":{\\\"txt\\\":\\\"Russian Roulette [Carmelo Cortez, 1978].txt\\\",\\\"rom\\\":\\\"Russian Roulette [Carmelo Cortez, 1978].ch8\\\"},\\\"Missile\\\":{\\\"rom\\\":\\\"Missile [David Winter].ch8\\\"},\\\"Pong 2 (Pong hack)\\\":{\\\"rom\\\":\\\"Pong 2 (Pong hack) [David Winter, 1997].ch8\\\"},\\\"Vertical Brix\\\":{\\\"rom\\\":\\\"Vertical Brix [Paul Robson, 1996].ch8\\\"},\\\"Pong (1 player)\\\":{\\\"rom\\\":\\\"Pong (1 player).ch8\\\"},\\\"Rocket Launcher\\\":{\\\"rom\\\":\\\"Rocket Launcher.ch8\\\"},\\\"Biorhythm\\\":{\\\"txt\\\":\\\"Biorhythm [Jef Winsor].txt\\\",\\\"rom\\\":\\\"Biorhythm [Jef Winsor].ch8\\\"},\\\"Programmable Spacefighters\\\":{\\\"rom\\\":\\\"Programmable Spacefighters [Jef Winsor].ch8\\\",\\\"txt\\\":\\\"Programmable Spacefighters [Jef Winsor].txt\\\"},\\\"Brick (Brix hack, 1990)\\\":{\\\"txt\\\":\\\"Brick (Brix hack, 1990).txt\\\",\\\"rom\\\":\\\"Brick (Brix hack, 1990).ch8\\\"},\\\"Shooting Stars\\\":{\\\"txt\\\":\\\"Shooting Stars [Philip Baltzer, 1978].txt\\\",\\\"rom\\\":\\\"Shooting Stars [Philip Baltzer, 1978].ch8\\\"},\\\"Coin Flipping\\\":{\\\"txt\\\":\\\"Coin Flipping [Carmelo Cortez, 1978].txt\\\",\\\"rom\\\":\\\"Coin Flipping [Carmelo Cortez, 1978].ch8\\\"},\\\"Hidden\\\":{\\\"txt\\\":\\\"Hidden [David Winter, 1996].txt\\\",\\\"rom\\\":\\\"Hidden [David Winter, 1996].ch8\\\"},\\\"Wipe Off\\\":{\\\"rom\\\":\\\"Wipe Off [Joseph Weisbecker].ch8\\\"},\\\"Most Dangerous Game\\\":{\\\"txt\\\":\\\"Most Dangerous Game [Peter Maruhnic].txt\\\",\\\"rom\\\":\\\"Most Dangerous Game [Peter Maruhnic].ch8\\\"},\\\"Space Invaders\\\":{\\\"txt\\\":\\\"Space Invaders [David Winter] (alt).txt\\\",\\\"rom\\\":\\\"Space Invaders [David Winter] (alt).ch8\\\"},\\\"Vers\\\":{\\\"rom\\\":\\\"Vers [JMN, 1991].ch8\\\"},\\\"Tapeworm\\\":{\\\"rom\\\":\\\"Tapeworm [JDR, 1999].ch8\\\"},\\\"Craps\\\":{\\\"txt\\\":\\\"Craps [Camerlo Cortez, 1978].txt\\\",\\\"rom\\\":\\\"Craps [Camerlo Cortez, 1978].ch8\\\"},\\\"Nim\\\":{\\\"rom\\\":\\\"Nim [Carmelo Cortez, 1978].ch8\\\",\\\"txt\\\":\\\"Nim [Carmelo Cortez, 1978].txt\\\"},\\\"Animal Race\\\":{\\\"txt\\\":\\\"Animal Race [Brian Astle].txt\\\",\\\"rom\\\":\\\"Animal Race [Brian Astle].ch8\\\"},\\\"Tank\\\":{\\\"rom\\\":\\\"Tank.ch8\\\",\\\"txt\\\":\\\"Tank.txt\\\"},\\\"Slide\\\":{\\\"txt\\\":\\\"Slide [Joyce Weisbecker].txt\\\",\\\"rom\\\":\\\"Slide [Joyce Weisbecker].ch8\\\"},\\\"Worm V4\\\":{\\\"rom\\\":\\\"Worm V4 [RB-Revival Studios, 2007].ch8\\\",\\\"txt\\\":\\\"Worm V4 [RB-Revival Studios, 2007].txt\\\"},\\\"Wall\\\":{\\\"rom\\\":\\\"Wall [David Winter].ch8\\\"},\\\"Rocket Launch\\\":{\\\"rom\\\":\\\"Rocket Launch [Jonas Lindstedt].ch8\\\"},\\\"Figures\\\":{\\\"rom\\\":\\\"Figures.ch8\\\"},\\\"Tic-Tac-Toe\\\":{\\\"rom\\\":\\\"Tic-Tac-Toe [David Winter].ch8\\\"},\\\"Submarine\\\":{\\\"txt\\\":\\\"Submarine [Carmelo Cortez, 1978].txt\\\",\\\"rom\\\":\\\"Submarine [Carmelo Cortez, 1978].ch8\\\"},\\\"Filter\\\":{\\\"rom\\\":\\\"Filter.ch8\\\"},\\\"Mastermind FourRow (Robert Lindley, 1978)\\\":{\\\"rom\\\":\\\"Mastermind FourRow (Robert Lindley, 1978).ch8\\\",\\\"txt\\\":\\\"Mastermind FourRow (Robert Lindley, 1978).txt\\\"},\\\"Spooky Spot\\\":{\\\"txt\\\":\\\"Spooky Spot [Joseph Weisbecker, 1978].txt\\\",\\\"rom\\\":\\\"Spooky Spot [Joseph Weisbecker, 1978].ch8\\\"},\\\"Tetris\\\":{\\\"rom\\\":\\\"Tetris [Fran Dachille, 1991].ch8\\\",\\\"txt\\\":\\\"Tetris [Fran Dachille, 1991].txt\\\"},\\\"Deflection\\\":{\\\"rom\\\":\\\"Deflection [John Fort].ch8\\\",\\\"txt\\\":\\\"Deflection [John Fort].txt\\\"},\\\"Rocket\\\":{\\\"rom\\\":\\\"Rocket [Joseph Weisbecker, 1978].ch8\\\"},\\\"Space Intercept\\\":{\\\"rom\\\":\\\"Space Intercept [Joseph Weisbecker, 1978].ch8\\\",\\\"txt\\\":\\\"Space Intercept [Joseph Weisbecker, 1978].txt\\\"},\\\"UFO\\\":{\\\"rom\\\":\\\"UFO [Lutz V, 1992].ch8\\\",\\\"txt\\\":\\\"UFO [Lutz V, 1992].txt\\\"},\\\"Sequence Shoot\\\":{\\\"txt\\\":\\\"Sequence Shoot [Joyce Weisbecker].txt\\\",\\\"rom\\\":\\\"Sequence Shoot [Joyce Weisbecker].ch8\\\"},\\\"Merlin\\\":{\\\"txt\\\":\\\"Merlin [David Winter].txt\\\",\\\"rom\\\":\\\"Merlin [David Winter].ch8\\\"},\\\"ZeroPong\\\":{\\\"rom\\\":\\\"ZeroPong [zeroZshadow, 2007].ch8\\\"},\\\"Pong (alt)\\\":{\\\"rom\\\":\\\"Pong (alt).ch8\\\"},\\\"X-Mirror\\\":{\\\"rom\\\":\\\"X-Mirror.ch8\\\"},\\\"Landing\\\":{\\\"rom\\\":\\\"Landing.ch8\\\"},\\\"Airplane\\\":{\\\"rom\\\":\\\"Airplane.ch8\\\"},\\\"Cave\\\":{\\\"rom\\\":\\\"Cave.ch8\\\"}}\");\n\n//# sourceURL=webpack:///./roms/metadata.json?");

/***/ })

}]);